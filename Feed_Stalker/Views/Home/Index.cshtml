
@{

    Layout = "~/Views/_Layout.cshtml";
}


@using (Html.BeginForm("Feeds", "Home", FormMethod.Post))
{
    <fieldset>

        <legend>Feed</legend>

        <label for="secret_key_input">Input your <em>secret key</em> here: </label>
        <input name="secret_key_input" type="text" />

        <input type="submit" value="Submit" />
    </fieldset>

}
    <p>Your secret key is <strong>@TempData["SecretKey"]</strong> </p>
@Html.Partial("Form")









@*@if (Model.Keys.Count != 0)
            {
                <h1>Database says hi:</h1>
                <ul>
                    @foreach (string key in Model.Keys)
                    {
                        <li><strong>@key</strong> @Model[key].</li>
                    }
                </ul>
            }



            @if (!String.IsNullOrEmpty(TempData["SecretKey"] as string))
            {
                <p><strong>Secret key: </strong>@TempData["SecretKey"] </p>
            }

            @Html.Partial("Form")



            <h2>User Stories</h2>
            <ul>
                <li>
                    As a user I want to use the Feed Stalker web application and/or APIs in order to<em> register an Atom feed URL and a web hook</em> so that the web hook is triggered as soon as the feed is updated. Once this is done a secret key is generated and communicated to me through the web application. Only the users that knows this secret can use it so that they can read, update and delete the web hook.
                </li>
                <li>
                    As a user I want to be able to allow the Feed Stalker web application to prompt for notifications in my browser so that I can get notified as soon as the feed is updated. Read more about web notifications.
                </li>
                <li>
                    As a user I do not want to care about the webhook on Feed Stalker. If the feed is not updated in more that 1 month, then the webhook gets deleted and a DELETE operation is triggered on the webhook URL in order to notify the system subscribed to the feed.
                </li>
            </ul>
        </div>
    </body>*@
